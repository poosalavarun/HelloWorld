name: Deploy-EmailSender
on:
  workflow_dispatch:
  workflow_run:
     workflows: [Build-EmailSender]
     types: [requested]
     branches: [saas-devops-azuread]
env:
  Code-Repository: 'SphereTechSol/sb'
  Code-Reference: 'saas-devops-latest'
  EmailSender_Deployment_Scriptpath: './connector-scripts/DeployEmailSender.ps1'
  Approvers_list: 'Hemavathi-Elangovan_Sphere'
  EmailSender_ArtifactName: 'EmailSender'
  EmailSender_ArtifactPath: './EmailSender.zip'
  
jobs:
  DownloadArtifact-EmailSender:
    runs-on:
      group: Windows-Azure
    if: github.event.workflow_run.conclusion == 'success'
     
    env:
      EmailSender_JfrogDownloadPath: 'sphere-generic-local/6.5.1.0-saas-release/connectors/EmailSender/'
      azPSVersion: 'Latest'  # Provide the desired version here
      
    steps:
        
    - name: Fetch Sources
      uses: actions/checkout@v3
      with:
          repository:  ${{ env.Code-Repository  }}
          ref: ${{ env.Code-Reference  }}
          
    - name: Create artifact directory
      run: |
         if (!(Test-Path -Path './EmailSender' -PathType Container)) {
         mkdir ./EmailSender   }
         

    - name: Set up JFrog CLI
      uses: jfrog/setup-jfrog-cli@v3
      with:
        jfrog-url: ${{ secrets.JFROG_URL }}
        jfrog-user: ${{ secrets.JFROG_USER }}
        jfrog-access-token: ${{ secrets.JFROG_ACCESS_TOKEN }}

    - name: download from Artifactory
      run: |
        jf rt dl ${{ env.EmailSender_JfrogDownloadPath}} ./EmailSender/ --sort-by=created --sort-order=desc --limit=1 --insecure-tls --url https://artifacts.sphere-dev.com/artifactory --access-token cmVmdGtuOjAxOjE3MjQ0MjY4ODY6MkdnbFVlZUM2cHhQSWdKQ1duQUk3TnBva05a
        Get-ChildItem -File -Path './EmailSender/6.5.1.0-saas-release/connectors/EmailSender/' -Filter *.zip -Recurse | ForEach-Object { Copy-Item -Path $_.FullName -Destination ./EmailSender/ }

    - name: Drop Artifact
      uses: actions/upload-artifact@v3
      with:
          name: ${{ env.EmailSender_ArtifactName }}
          path: './${{ env.EmailSender_ArtifactName }}/{{env.EmailSender_ArtifactPath}}' 
          
  Deploy-EmailSender-To-Dev:
      runs-on:
        group: Windows-Azure
      needs: DownloadArtifact-EmailSender
      steps:
        - uses: trstringer/manual-approval@v1
          with:
            secret: ${{ github.TOKEN }}
            approvers: ${{ env.Approvers_list }}
            minimum-approvals: 1
            issue-title: "Deploying artifact to Dev"
            issue-body: "Please approve or deny the deployment"
            exclude-workflow-initiator-as-approver: false
            additional-approved-words: ''
            additional-denied-words: ''  
        - name: Login via Az module
          uses: azure/login@v1
          with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
              enable-AzPSSession: true 
        - name: Download a single artifact
          uses: actions/download-artifact@v3
          with:
            name: ${{ env.EmailSender_ArtifactName }}
        - name: Run Azure PowerShell script
          uses: azure/powershell@v1
          with:
            inlineScript: |
             #Ps-session login
              $vmpassword = ConvertTo-SecureString '${{ secrets.VM_PASSWORD }}' -AsPlainText -Force
              $credential = New-Object System.Management.Automation.PSCredential ('${{ secrets.VM_USERNAME }}', $vmpassword)
              $Session = New-PSSession -ComputerName '${{ secrets.VM_HOSTNAME }}' -Credential $credential -Authentication Negotiate
              # Copy artifact to target VM
              $sourcePath = './${{ env.EmailSender_ArtifactName }}/{{env.EmailSender_ArtifactPath}}' 
              $destinationPath = 'C:\Artifacts\EmailSender.zip'
              Copy-Item -Path $sourcePath -Destination $destinationPath -ToSession $session
     

              # Execute script on the target VM
              Invoke-Command -Session $session -FilePath ${{ env.EmailSender_Deployment_Scriptpath }}
            azPSVersion: ${{ env.azPSVersion }}
  Deploy-EmailSender-To-Staging:
      runs-on:
        group: Windows-Azure
      needs: Deploy-EmailSender-To-Dev
      steps:
        - uses: trstringer/manual-approval@v1
          with:
            secret: ${{ github.TOKEN }}
            approvers: ${{ env.Approvers_list }}
            minimum-approvals: 1
            issue-title: "Deploying artifact to Dev"
            issue-body: "Please approve or deny the deployment"
            exclude-workflow-initiator-as-approver: false
            additional-approved-words: ''
            additional-denied-words: ''  
        - name: Login via Az module
          uses: azure/login@v1
          with:
              creds: ${{ secrets.AZURE_CREDENTIALS }}
              enable-AzPSSession: true 
              
        - name: Run Azure PowerShell script
          uses: azure/powershell@v1
          with:
            inlineScript: |
             #Ps-session login
              $vmpassword = ConvertTo-SecureString '${{ secrets.VM_PASSWORD }}' -AsPlainText -Force
              $credential = New-Object System.Management.Automation.PSCredential ('${{ secrets.VM_USERNAME }}', $vmpassword)
              $Session = New-PSSession -ComputerName '${{ secrets.VM_HOSTNAME }}' -Credential $credential -Authentication Negotiate
              # Copy artifact to target VM
              $sourcePath = './${{ env.EmailSender_ArtifactName }}/{{env.EmailSender_ArtifactPath}}' 
              $destinationPath = 'C:\Artifacts\EmailSender.zip'
              Copy-Item -Path $sourcePath -Destination $destinationPath -ToSession $session
     

              # Execute script on the target VM
              Invoke-Command -Session $session -FilePath ${{ env.EmailSender_Deployment_Scriptpath }}
            azPSVersion: ${{ env.azPSVersion }}
